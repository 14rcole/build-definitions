---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: build-definitions-bundle-push
  annotations:
    pipelinesascode.tekton.dev/on-event: "push"
    pipelinesascode.tekton.dev/on-target-branch: "main"
    pipelinesascode.tekton.dev/task: "[git-cli, tasks/git-clone.yaml, tasks/buildah.yaml]"
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  params:
    - name: git-url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
  pipelineSpec:
    params:
      - description: 'Source Repository URL'
        name: git-url
        type: string
      - description: 'Revision of the Source Repository'
        name: revision
        type: string
    tasks:
      - name: clone-repository
        params:
          - name: url
            value: $(params.git-url)
          - name: revision
            value: "$(params.revision)"
        taskRef:
          name: git-clone
        workspaces:
          - name: output
            workspace: workspace
      - name: build-container
        params:
          - name: IMAGE
            value: quay.io/redhat-appstudio/appstudio-utils:{{ revision }}
          - name: CONTEXT
            value: appstudio-utils
        runAfter:
          - clone-repository
        taskRef:
          name: buildah
        workspaces:
          - name: source
            workspace: workspace
      - name: build-bundles
        params:
          - name: revision
            value: "$(params.revision)"
        runAfter:
          - build-container
        workspaces:
          - name: source
            workspace: workspace
        taskSpec:
          params:
            - name: revision
              type: string
          steps:
            - name: build-bundles
              image: quay.io/redhat-appstudio/appstudio-utils:{{ revision }}
              workingDir: $(workspaces.source.path)
              script: |
                #!/usr/bin/env bash
                MY_QUAY_USER=redhat-appstudio BUILD_TAG=$(params.revision) SKIP_BUILD=1 SKIP_INSTALL=1 hack/build-and-push.sh
          workspaces:
            - name: source
      - name: update-infra-repo
        runAfter:
          - build-bundles
        params:
          - name: BASE_IMAGE
            value: registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:af7dd5b3b1598a980f17d5f5d3d8a4b11ab4f5184677f7f17ad302baa36bd3c1
          - name: GIT_USER_NAME
            value: Build deployer
          - name: GIT_SCRIPT
            value: |
              ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
              git clone https://github.com/redhat-appstudio/infra-deployments
              cd infra-deployments
              git remote add push git@github.com:redhat-appstudio-mr-creation/infra-deployments.git
              git checkout -b build-definitions-update
              BUNDLE=quay.io/redhat-appstudio/build-templates-bundle
              for file in $(git grep -l $BUNDLE); do
                sed -i "s|\($BUNDLE\):.*|\1:$(params.revision)|g" $file
              done
              git commit -a -m "Build definitions update" -m "from $(params.git-url) $(params.revision)"
              git push -f --set-upstream push build-definitions-update

              set +x
              curl -H "Authorization: token $(cat /root/.ssh/token)" \
                -X POST \
                -H "Accept: application/vnd.github.v3+json" \
                https://api.github.com/repos/redhat-appstudio/infra-deployments/pulls \
                -d '{"head":"redhat-appstudio-mr-creation:build-definitions-update","base":"main","title":"Build definitions update"}'
        taskRef:
          name: git-cli
        workspaces:
          - name: source
            workspace: workspace
          - name: ssh-directory
            workspace: deploy-key
    workspaces:
      - name: workspace
      - name: deploy-key
  serviceAccountName: pipeline
  workspaces:
    - name: workspace
      persistentVolumeClaim:
        claimName: app-studio-default-workspace
      subPath: build-definitions-bundle-{{ revision }}
    - name: deploy-key
      secret:
        secretName: build-definitions-deploy-key

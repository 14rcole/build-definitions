apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: "appstudio, hacbs"
  name: init
spec:
  description: >-
    App Studio Initialize Pipeline Task, include flags for rebuild and auth.
  params:
    - name: image-url
      description: Image URL for testing
    - name: rebuild
      description: Rebuild the image if exists
      default: "false"
    - name: skip-checks
      description: skip checks against built image
      default: "false"
    - name: pipeline-run-name
  results:
    - name: build
  steps:
    - name: appstudio-init
      image: registry.access.redhat.com/ubi9/skopeo:9.1.0-5@sha256:6ebbdfce633f9915a6a99d8ee035d9fd258121aa1acf944229e90696eb353549
      script: |
        #!/bin/bash
        echo "App Studio Build Initialize: $(params.image-url)"
        echo
        echo "Determine if Image Already Exists"
        # Build the image when image does not exists or rebuild is set to true
        if ! skopeo inspect --no-tags docker://$(params.image-url) &>/dev/null || [ "$(params.rebuild)" == "true" ] || [ "$(params.skip-checks)" == "false" ]; then
          echo -n "true" > $(results.build.path)
        else
          echo -n "false" > $(results.build.path)
        fi

    - name: hacbs-init
      image: registry.redhat.io/openshift4/ose-cli:v4.11
      script: |
        # Create empty secret which is now hardcoded in PaC Pipelinerun template
        if ! oc get secret redhat-appstudio-registry-pull-secret &>/dev/null; then
          oc create secret generic redhat-appstudio-registry-pull-secret || true
        fi
        if [ "$(params.skip-checks)" == "false" ]; then
          oc annotate pipelinerun $(params.pipeline-run-name) 'appstudio.redhat.com/updateComponentOnSuccess=false'
        fi

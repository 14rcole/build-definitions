apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: tekton-bundle-build
  labels:
    "pipelines.openshift.io/used-by" : "build-cloud"
    "pipelines.openshift.io/runtime" : "generic"
    "pipelines.openshift.io/strategy" : "tekton-bundle"
spec:
  params:
    - description: 'Source Repository URL'
      name: git-url
      type: string
    - description: 'Revision of the Source Repository'
      name: revision
      type: string
      default: main
    - description: 'Fully Qualified Output Image'
      name: output-image
      type: string
    - description: The path to your source code
      name: path-context
      type: string
      default: .
    - description: List of files
      name: files
      type: string
      default: "*.yaml *.yml"
  tasks:
    - name: appstudio-init
      params:
        - name: image-url
          value: "$(params.output-image)"
      taskRef:
        kind: ClusterTask
        name: appstudio-init
      workspaces:
        - name: source
          workspace: workspace
        - name: registry-auth
          workspace: registry-auth
        - name: git-auth
        workspace: git-auth
    - name: clone-repository
      when:
      - input: $(tasks.appstudio-init.results.exists)
        operator: in
        values: ["false"]
      runAfter:
        - appstudio-init
      params:
        - name: url
          value: $(params.git-url)
        - name: revision
          value: "$(params.revision)"
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: workspace
    - name: build-container
      params:
        - name: output-image
          value: $(params.output-image)
        - name: files
          value: $(params.files)
        - name: path-context
          value: $(params.path-context)
      runAfter:
        - clone-repository
      taskRef:
        kind: ClusterTask
        name: appstudio-tekton-bundle
      workspaces:
        - name: source
          workspace: workspace
        - name: registry-auth
          workspace: registry-auth
    - name: show-summary
      runAfter:
        - build-container
      taskRef:
        kind: ClusterTask
        name: appstudio-summary
      params:
      - name: pipeline-run-name
        value: "$(context.pipelineRun.name)"
      - name: git-url
        value: "$(params.git-url)"
      - name: image-url
        value: $(params.output-image)
    - name: skip-rebuild-summary
      when:
      - input: $(tasks.appstudio-init.results.exists)
        operator: in
        values: ["true"]
      runAfter:
        - appstudio-init
      taskRef:
        kind: ClusterTask
        name: appstudio-summary
      params:
      - name: pipeline-run-name
        value: "$(context.pipelineRun.name)"
      - name: git-url
        value: "$(params.git-url)"
      - name: image-url
        value: $(params.output-image)
  workspaces:
    - name: workspace
    - name: registry-auth
    - name: git-auth
      optional: true

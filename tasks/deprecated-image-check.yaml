apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: deprecated-image-check
spec:
  stepTemplate:
    volumeMounts:
      - name: data
        mountPath: /data

  params:
    - name: registry
      description: "Image registry for the tested image"
      default: registry.access.redhat.com
    - name: source-image
      description: "Image name to test"
    - name: policy-dir
      description: "Path to the directory containing conftest policies"
      default: "/project/image/policy/deprecated-image.rego"

  results:
    - name: pyxis-http-code
      description: HTTP code returned by Pyxis API endpoint

  steps:
    # Download Pyxis metadata about the image
    #
    # project
    # └── policy
    # data
    # └── image_data.json
    - name: query-pyxis
      image: registry.access.redhat.com/ubi8/ubi
      script: |
        #!/usr/bin/env bash
        echo "Querying Pyxis for $(inputs.params.source-image)..."
        http_code=$(curl -s -o /data/image_data.json -w '%{http_code}' "https://catalog.redhat.com/api/containers/v1/repositories/registry/$(inputs.params.registry)/repository/$(inputs.params.source-image)")

        echo "Response code: $http_code"
        echo -n $http_code > $(results.pyxis-http-code.path)

    # Run the tests and save output
    #
    # project
    # └── policy
    # data
    # ├── image_data.json
    # └── test_result.json
    - name: run-conftest
      image: quay.io/redhat-appstudio/hacbs-test
      script: |
        #!/usr/bin/env sh
        http_code=$(cat $(results.pyxis-http-code.path))

        if [ "$http_code" == "200" ];
        then
          echo "Running conftest..."
          conftest test /data/image_data.json -p $(inputs.params.policy-dir) -o json > /data/test_result.json && echo "All tests successful" || echo "Some tests failed"
          echo "Done!"
          exit 0
        elif [ "$http_code" == "404" ];
        then
          echo "Image not found in Pyxis"
          :
        else
          echo "Unexpected error (HTTP code $http_code) occured during running conftest"
          exit 1
        fi

  volumes:
    - name: data
      emptyDir: {}
